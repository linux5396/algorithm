递归-动态规划之数字转字符算法

问题：
 * 问题：把数字翻译成字符串，0-a、1-b、2-c...25-z；
 * 如123 -> {
 * 1 2 3，
 * 12，3
 * 1，23
 * }.ways=3种



解决思路：
1、采用递归，对每一步进行分解，则有f(i)=f(i+1)+g(i,i+1)*f(i+2);
    问题：从上往下算，存在太多的重复运算；
2、
    考虑：存在递推公式f(i)=f(i+1)+g(i,i+1)*f(i+2)
    尝试动态规划，从下往上算：12258
                      * f(4) = 1
                      * f(3) = f(4)+0 = 1
                      * f(2) = f(3)+f(4) = 2
                      * f(1) = f(2)+f(3) = 3
                      * f(0) = f(1)+f(2) = 5

个人问题：
1、要点：存在递推公式的递归求解，可以尝试用DP的从下而上来逆向求解。效率高。

时间：2019/12/10