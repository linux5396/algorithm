高效求幂算法

问题：
在不调用任何库函数下，实现基数的N次方，不考虑大数问题。


解决思路：
1、时间复杂度为O(N)的全循环
2、分析指数问题，指数问题一般可以拆解成小的指数问题，就如2^32=2^16*2^16。2^16又可以拆成2^8.从而将复杂度降到O(logN)
    找到规律公式： //a^n=a^(n/2)*a^(n/2)  //偶数
                   //a^(n+1)=a^(n/2)*a^(n/2)*a//n+1=exponent，这个时候N为偶数
    进行递归求解。

个人问题：
1、高效奇偶数判断&
2、浮点型的归0判断

时间：2019/09/23

大数打印算法

问题：
输入N位，则打印1、2.。。N。比如输入3，打印1到999


解决思路：
1、基于字符数组实现
2、基于递归全排列实现

个人问题：
1、大数字符数组的实现

时间：2019/09/24