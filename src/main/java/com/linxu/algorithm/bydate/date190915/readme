说明：由于过去两天没有做该算法题目，因此，本篇一共需要三个算法

二叉树查找下一个节点的算法

问题：
依据当前的中序、前序输入，构造一颗二叉树。找到指定的节点，同时，查找该节点
在中序遍历情况下的下一个节点是什么，并且返回输出。

解决思路：
1、画图，构造一棵正常的二叉树（节点要具有一定的代表性）
2、对特殊节点、普通节点进行分类划分。
3、找出如下三种情况：(都是针对右子树进行判断，原因就是下一个节点只可能在右、上、右上，不可能在左边)
    a.如果有右子树，下个节点就是右子树的最左节点(右子树如果只有根节点，那么即为根节点)
    b.如果一个节点没有右子树，并且是父节点的左孩子，那么下一个节点就是父亲节点
    c.如果一个节点没有右子树，还是父结点的右节点，那么就需要向上追溯

个人问题：
1、特殊分类划分的能力
2、二叉树的构建

两个栈代替队列算法
使用两个栈代替队列的功能

解决思路：
1、通过两个栈可以使用将队列头的数据放到其中一个的栈顶

个人问题：
1、比较简单，考的是对栈、队列的熟练运用

斐波那契数的第N项与跳台阶

解决思路：
1、动态规划
2、斐波那契数列：可以这么看，当台阶数量>2时，如果第一次跳1个，那么总的次数就是剩下的f(N-1)；如果跳两个，那么总的次数就是剩下的f(N-2)的次数；
综合以上，可以得出f(N)=f(N-1)+f(N-2);

时间：2019/09/16