位运算算法

问题：
求一个十进制数转为二进制数中1的个数

解决思路：
1、使用计数器，对于正数，使用递归求出每一个余数，判断是否是1，是就递增。
    对于负数，与上0xFFFFFFFF得出补码，再进行判断。

2、直接使用位运算
while (n != 0) {
            //每次判断最低位是否为1
            count += (n & 1);
            //每次右移一位
            n >>>= 1;
        }

个人问题：
1、原码、补码、反码
2、位运算

员工年龄排序算法

问题：
 * 实现一个时间效率为O(N)的排序算法，具体场景如下：
 * 1、公司员工有进10K个，员工的年龄区间在15-100之间。包括15和100
 * 2、对员工的年龄进行排序
 * 3、可以使用辅助空间

 思路：
 1、使用100-15+1个辅助空间，遍历所有年龄，为O (N)
 2、统计数量，并在原本数组上遍历填入即可。

旋转数组中的最小值算法

问题：
 * 查找旋转数组的最小数字。
 * 输入一个递增排序的一个数组的一个旋转，输出数组中的最小元素
 * 例如输入，{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，输出1.

 解决思路：
 1、全局遍历 O(N)
 2、观察特点，发现是两个有序的数组，考虑使用二分查找
    第一个指针最终指向前面递增数组的最后一个元素
    第二个指针指向后面递增数组的第一个元素
    返回第二个指针指向的元素，它就是最小的

  3、存不存在特殊情况，存在{1,0,1,1,1}
  原因是因为 [start]=[end]=[middle]，这个时候只能使用遍历

  个人问题：
  1、二分查找的应用
  2、特殊情况考虑
  3、边界处理，以及终态的考虑，即哪个指针最终指向哪里，哪个才是最小的。
  4、特别注意，求中间索引，是采用加法，即middle=(index1+index2>>1);不要写成减法

时间：2019/9/17