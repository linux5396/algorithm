大数运算算法

问题：
实现两个大数整数的加法，包含负数。


解决思路：
1、采用计算机的底层思想，将0代表正，9代表负。
2、将两个输入的位数纠正为一致，用0表示正，用9表示负。则1的反码为8
                            //[符号][0]...[X]
                            做加法运算。得出结果，如果是负数再求补码（记得加1），即补码的补码是原码。这个时候就是真正的数值了。
 负数的补码等于除符号位之外的原码的反码+1；
 如果求出来的结果是正数，则直接获取数值即可，如果为负数，则再求补。

个人问题：
1、机器码的运算规则
2、大数处理思想

时间：2019/09/24

用O(1)删除链表节点算法

问题：给定一个单向链表的头指针和一个节点的指针，定义一个函数在O(1)时间内删除该节点


解决思路：
1、如果该节点是头节点，直接删除
2、如果该节点是中间节点，将后续一个的内容替换上来，释放后一个节点。
3、如果是尾部节点，必须全部遍历，到倒数第二个，然后将其中的next指针指向空。

个人问题：
1、JAVA使用注意的一个细节问题：
node=new node;
Wrap.node=node;
node=null;
Wrap.node!=null,因为存在引用。
时间：2019/09/24