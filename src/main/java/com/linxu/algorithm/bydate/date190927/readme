完全背包算法

问题：
在0-1背包的基础上，每个物件都可以放无限次，同样是找到最大价值，简称完全背包。


解决思路：
    1、状态方程：dp[i,j]=max(dp[i-1,j-k*wi]+k*vi)（0<=k*wi<=W）
    其中dp[i-1,j-k*wi]+k*vi表示前i-1种物品中选取若干件物品放入剩余容量为j-k*wi的背包中所能得到的最大价值加上k件第i种物品。
    2、可以转化为：要么不放，要么在原先基础上再放一件dp[i][j] = max(dp[i - 1][j], dp[i][j - cost[i]] + value[i]);
    3、优化：
        a.同样存在空间优化，O(V)

个人问题：
1、动态规划


时间：2019/9/27